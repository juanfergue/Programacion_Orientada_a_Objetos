package covid;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.SortedMap;
import java.util.SortedSet;
import java.util.*;

public class MapaCOVID {
	private String nombre;
	private SortedMap<String, SortedSet<DistritoSanitario>> mapa;
	
	public MapaCOVID(String n, String fichero) {
		if(n.length() == 0 || n.isEmpty()) {
			throw new COVIDException("ERROR introduzca el ombre de la región");
		}
		try {
			leerDatos(fichero);
		} catch (Exception e) {
			throw new COVIDException("ERROR en el fichero" + fichero);
		}
	}
	public void leerDatos(String fichero) throws FileNotFoundException {
		try(Scanner sc = new Scanner(new File(fichero))){
			leerDatos(sc);
		}
	}
	public void leerDatos(Scanner sc) {
		while(sc.hasNext()) {
			try(Scanner linea = new Scanner(sc.next())){
				linea.useDelimiter("[():]+");
				String DS = linea.next();
				String prov = linea.next();
				int poblacion = Integer.parseInt(linea.next());
				int c14 = Integer.parseInt(linea.next());
				agregarDistrito(prov, new DistritoSanitario(DS, poblacion, c14));
			}catch (Exception e) {
				throw new COVIDException("ERROR");

			}
		}
	}
	public void agregarDistrito(String prov, DistritoSanitario ds) {
		SortedSet<DistritoSanitario> listads;
		if(!mapa.containsKey(prov)) { //Compruebo que el el SortedMap esta guardada la prov si no esta la añade
			listads = new TreeSet<>();
			mapa.put(prov, listads);
		}else {							//Si la prov esta cogemos su SortedSet para ver si ds esta
			listads = mapa.get(prov);
		}
		if(!listads.contains(ds)) { //Comprobamos si esta ds en la lista si no esta lo añadimos
			listads.add(ds);
		}
	}
	public String getNombre() {
		return nombre;
	}
	public Set<String> getProvincias(){
		return mapa.keySet();
	}
	public Set<DistritoSanitario> getDIstritos(){
		Set<DistritoSanitario> set = new HashSet<>();
		
	}
}
